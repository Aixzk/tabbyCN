ul.nav-tabs(ngbNav, #nav='ngbNav')
    li(ngbNavItem)
        a(ngbNavLink) 常规
        ng-template(ngbNavContent)
            .d-flex.w-100.mt-3
                .form-group.mr-2(
                    ngbDropdown
                )
                    label 连接
                    button.btn.btn-secondary.d-block(ngbDropdownToggle) {{getConnectionDropdownTitle()}}
                    div(ngbDropdownMenu)
                        button.dropdown-item(
                            (click)='connectionMode = "direct"',
                        ) 直接连接
                        button.dropdown-item(
                            *ngIf='hostApp.platform !== Platform.Web',
                            (click)='connectionMode = "proxyCommand"',
                        )
                            div Proxy command
                            .text-muted 使用标准输入/输出的命令而不是网络连接
                        button.dropdown-item(
                            (click)='connectionMode = "jumpHost"',
                        )
                            div Jump host
                            .text-muted 连接到一个不同的主机并使其作为代理
                        button.dropdown-item(
                            (click)='connectionMode = "socksProxy"',
                        )
                            div SOCKS proxy
                            .text-muted 连接到代理服务器

                .form-group.w-100(*ngIf='connectionMode === "proxyCommand"')
                    label 代理命令
                    input.form-control(
                        type='text',
                        [(ngModel)]='profile.options.proxyCommand',
                    )

                .form-group.w-100.mr-2(*ngIf='connectionMode !== "proxyCommand"')
                    label 主机
                    input.form-control(
                        type='text',
                        [(ngModel)]='profile.options.host',
                    )

                .form-group(*ngIf='connectionMode !== "proxyCommand"')
                    label 端口
                    input.form-control(
                        type='number',
                        placeholder='22',
                        [(ngModel)]='profile.options.port',
                    )

            .form-group(*ngIf='connectionMode === "jumpHost"')
                label 跳转主机
                select.form-control([(ngModel)]='profile.options.jumpHost')
                    option([ngValue]='null') 选择
                    option([ngValue]='x.id', *ngFor='let x of jumpHosts') {{x.name}}


            .d-flex.w-100(*ngIf='connectionMode === "socksProxy"')
                .form-group.w-100.mr-2
                    label SOCKS 代理主机
                    input.form-control(
                        type='text',
                        [(ngModel)]='profile.options.socksProxyHost',
                    )

                .form-group
                    label SOCKS 代理端口
                    input.form-control(
                        type='number',
                        placeholder='5000',
                        [(ngModel)]='profile.options.socksProxyPort',
                    )

            .form-group
                label Username
                input.form-control(
                    type='text',
                    placeholder='Ask every time',
                    [(ngModel)]='profile.options.user',
                )

            .form-group
                label 认证方法

                .btn-group.mt-1.w-100(
                    [(ngModel)]='profile.options.auth',
                    ngbRadioGroup
                )
                    label.btn.btn-secondary(ngbButtonLabel)
                        input(type='radio', ngbButton, [value]='null')
                        i.far.fa-lightbulb
                        .m-0 自动
                    label.btn.btn-secondary(ngbButtonLabel)
                        input(type='radio', ngbButton, [value]='"password"')
                        i.fas.fa-font
                        .m-0 密码
                    label.btn.btn-secondary(ngbButtonLabel)
                        input(type='radio', ngbButton, [value]='"publicKey"')
                        i.fas.fa-key
                        .m-0 秘钥
                    label.btn.btn-secondary(ngbButtonLabel, ng:if='hostApp.platform !== Platform.Web')
                        input(type='radio', ngbButton, [value]='"agent"')
                        i.fas.fa-user-secret
                        .m-0 代理
                    label.btn.btn-secondary(ngbButtonLabel)
                        input(type='radio', ngbButton, [value]='"keyboardInteractive"')
                        i.far.fa-keyboard
                        .m-0 交互

            .form-line(*ngIf='profile.options.user && (!profile.options.auth || profile.options.auth === "password")')
                .header
                    .title 密码
                    .description(*ngIf='!hasSavedPassword') 保存密码
                    .description(*ngIf='hasSavedPassword') 此连接有一个已保存的密码
                button.btn.btn-success.ml-4(*ngIf='!hasSavedPassword', (click)='setPassword()')
                    i.fas.fa-key
                    span 设置密码
                button.btn.btn-danger.ml-4(*ngIf='hasSavedPassword', (click)='clearSavedPassword()')
                    i.fas.fa-trash-alt
                    span 忘记

            .form-group(*ngIf='!profile.options.auth || profile.options.auth === "publicKey"')
                label 私钥
                .list-group.mb-2
                    .list-group-item.d-flex.align-items-center.p-1.pl-3(*ngFor='let path of profile.options.privateKeys')
                        i.fas.fa-key
                        .no-wrap.mr-auto {{path}}
                        button.btn.btn-link((click)='removePrivateKey(path)')
                            i.fas.fa-trash
                button.btn.btn-secondary((click)='addPrivateKey()')
                    i.fas.fa-folder-open
                    span 添加私钥

    li(ngbNavItem)
        a(ngbNavLink) 端口转发
        ng-template(ngbNavContent)
            ssh-port-forwarding-config(
                [model]='profile.options.forwardedPorts',
                (forwardAdded)='onForwardAdded($event)',
                (forwardRemoved)='onForwardRemoved($event)'
            )

    li(ngbNavItem)
        a(ngbNavLink) 高级
        ng-template(ngbNavContent)
            .form-line(ng:if='hostApp.platform !== Platform.Web')
                .header
                    .title X11 转发
                toggle([(ngModel)]='profile.options.x11')

            .form-line(ng:if='hostApp.platform !== Platform.Web')
                .header
                    .title Agent 转发
                toggle([(ngModel)]='profile.options.agentForward')

            .form-line
                .header
                    .title 跳过 MoTD/banner
                    .description 将会阻止 SSH 问候
                toggle([(ngModel)]='profile.options.skipBanner')

            .form-line
                .header
                    .title 在多个标签页中复用会话
                    .description 多个 shell 同属一个连接
                toggle([(ngModel)]='profile.options.reuseSession')

            .form-line
                .header
                    .title 保活间隔时间（ms）
                input.form-control(
                    type='number',
                    placeholder='0',
                    [(ngModel)]='profile.options.keepaliveInterval',
                )

            .form-line
                .header
                    .title 最大尝试保活次数
                input.form-control(
                    type='number',
                    placeholder='3',
                    [(ngModel)]='profile.options.keepaliveCountMax',
                )

            .form-line
                .header
                    .title 读取超时时间（ms）
                input.form-control(
                    type='number',
                    placeholder='20000',
                    [(ngModel)]='profile.options.readyTimeout',
                )

    li(ngbNavItem)
        a(ngbNavLink) 加密算法
        ng-template(ngbNavContent)
            .form-line.align-items-start
                .header
                    .title Ciphers
                .w-75
                    div(*ngFor='let alg of supportedAlgorithms.cipher')
                        checkbox([text]='alg', [(ngModel)]='algorithms.cipher[alg]')

            .form-line.align-items-start
                .header
                    .title Key exchange
                .w-75
                    div(*ngFor='let alg of supportedAlgorithms.kex')
                        checkbox([text]='alg', [(ngModel)]='algorithms.kex[alg]')

            .form-line.align-items-start
                .header
                    .title HMAC
                .w-75
                    div(*ngFor='let alg of supportedAlgorithms.hmac')
                        checkbox([text]='alg', [(ngModel)]='algorithms.hmac[alg]')

            .form-line.align-items-start
                .header
                    .title Host key
                .w-75
                    div(*ngFor='let alg of supportedAlgorithms.serverHostKey')
                        checkbox([text]='alg', [(ngModel)]='algorithms.serverHostKey[alg]')

    li(ngbNavItem)
        a(ngbNavLink) 登录脚本
        ng-template(ngbNavContent)
            login-scripts-settings([options]='profile.options', #loginScriptsSettings)

div([ngbNavOutlet]='nav')
